app-id: io.github.sharkwouter.Minigalaxy
runtime: org.gnome.Platform
runtime-version: '44'
sdk: org.gnome.Sdk
sdk-extensions:
  - org.gnome.Sdk.Compat.i386
  - org.freedesktop.Sdk.Extension.toolchain-i386
base: org.winehq.Wine
base-version: stable-22.08
cleanup:
  - /include
  - /lib/*.a
  - /lib/*.la
  - /lib/cmake
  - /lib/pkgconfig
  - /lib32/*.a
  - /lib32/*.la
  - /share/doc
  - /share/man
cleanup-commands:
  - mkdir -p ${FLATPAK_DEST}/lib{,32}/
inherit-extensions:
  - org.freedesktop.Platform.Compat.i386
  - org.freedesktop.Platform.ffmpeg_full.i386
  - org.freedesktop.Platform.ffmpeg-full
  - org.freedesktop.Platform.GL32
  - org.freedesktop.Platform.VAAPI.Intel.i386
  - org.winehq.Wine.DLLs
  - org.winehq.Wine.gecko
  - org.winehq.Wine.mono
add-extensions:
  org.gnome.Platform.Compat.i386:
    directory: lib/i386-linux-gnu
    version: '44'

  org.gnome.Platform.Compat.i386.Debug:
    directory: lib/debug/lib/i386-linux-gnu
    version: '44'
    no-autodownload: true

command: minigalaxy

finish-args:
  - --allow=multiarch
  - --device=all
  - --env=GST_PLUGIN_SYSTEM_PATH=/app/lib32/gstreamer-1.0:/app/lib/gstreamer-1.0:/usr/lib/i386-linux-gnu/gstreamer-1.0:/usr/lib/x86_64-linux-gnu/gstreamer-1.0
  - --env=WINEDLLPATH=/app/dlls/lib32:/app/dlls/lib:/app/lib32/wine/wined3d:/app/lib/wine/wined3d
  - --env=WINEESYNC=1
  - --env=WINEFSYNC=1
  - --filesystem=~/GOG Games:create
  - --share=ipc
  - --share=network
  - --socket=pulseaudio
  - --socket=wayland
  - --socket=x11

modules:
  - name: minigalaxy
    buildsystem: simple
    build-commands:
      - pip3 install --no-build-isolation --no-deps . --no-index --prefix=${FLATPAK_DEST}
    sources:
      - type: archive
        url: https://github.com/sharkwouter/minigalaxy/archive/1.2.5.tar.gz
        sha256: c0190851c69d89b7b3784a66617af24519977fffb88ee4fabf77db89ea16863f
        x-checker-data:
          type: anitya
          project-id: 292418
          url-template: https://github.com/sharkwouter/minigalaxy/archive/$version.tar.gz

  - name: innoextract
    buildsystem: cmake-ninja
    sources:
      - type: git
        url: https://github.com/dscharrer/innoextract.git
        tag: '1.9'
        commit: 81fd9b95b76ee5115ce116bfdbc3bc6b887b809d
        x-checker-data:
          type: git
          tag-pattern: ^([\d.]+)$
    modules:
      - name: boost
        buildsystem: simple
        build-commands:
          - ./bootstrap.sh --prefix=$FLATPAK_DEST --with-libraries=filesystem,iostreams,date_time,system,program_options
          - ./b2 -j$FLATPAK_BUILDER_N_JOBS install variant=release cxxstd=17 --layout=system
        sources:
          - type: archive
            url: https://boostorg.jfrog.io/artifactory/main/release/1.83.0/source/boost_1_83_0.tar.bz2
            sha256: 6478edfe2f3305127cffe8caf73ea0176c53769f4bf1585be237eb30798c3b8e
            x-checker-data:
              type: html
              url: https://www.boost.org/feed/downloads.rss
              version-pattern: <link>https://www.boost.org/users/history/version_([\d_]+).html</link>
              url-template: https://boostorg.jfrog.io/artifactory/main/release/$version0.$version2.$version4/source/boost_$version.tar.bz2

  - name: bundle-setup
    buildsystem: simple
    build-commands:
      - mkdir -p /app{,/lib/debug}/lib/i386-linux-gnu
      - install -D -m 0644 ld.so.conf -t /app/etc
    sources:
      - type: file
        path: ld.so.conf

  # Must have libraries for most old games.
  # WARNING: Use right build order here.
  - generated/shared-modules.json
  - generated/libs.json
  - generated/pypi-dependencies.json

  # Addons
  #   * DOSBox Staging.  DOS/x86 emulator focusing on ease of use.
  - addons/dosbox-staging.json
  #   * ScummVM.  A program which allows you to run certain classic graphical
  #     adventure and role-playing games, provided you already have their data
  #     files.
  - addons/scummvm.json
